# Azure Pipeline that runs basic continuous integration on a Terraform project

# This makes sure the pipeline is triggered every time code is pushed in the validation-testing example source, on all branches.
trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - 'europe/auto-scale/*'

variables:
  group: vargroup1
  terraformWorkingDirectory: '$(System.DefaultWorkingDirectory)/europe/auto-scale'
  terraformVersion: '1.6.5'
  serviceConnection: 'AwsSapperCIDev01'

stages:
  - stage: TerraformContinuousIntegration
    displayName: Terraform Module - CI
    jobs:
    - job: TerraformContinuousIntegrationJob
      displayName: TerraformContinuousIntegration - CI Job
      pool:
        vmImage: ubuntu-latest
      steps:

        - task: InstallSSHKey@0
          displayName: 'Install an SSH key'
          inputs:
            knownHostsEntry: 'ssh.dev.azure.com'
            sshKeySecureFile: id_rsa

        - task: TerraformTaskV1@0
          displayName: 'Terraform init'
          inputs:
            provider: 'aws'
            command: 'init'
            workingDirectory: '$(terraformWorkingDirectory)'
            backendServiceAWS: 'AWS for Terraform'
            backendAWSBucketName: 'terraform-state-sapper-s3'
            backendAWSKey: 'state/terraform.tfstate'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Plan'
          inputs:
            provider: 'aws'
            command: 'plan'
            workingDirectory: '$(terraformWorkingDirectory)'
            environmentServiceNameAWS: 'AWS for Terraform'

        - task: TerraformTaskV4@4
          displayName: 'Terraform APPLY!'
          inputs:
            provider: 'aws'
            command: 'apply'
            workingDirectory: '$(terraformWorkingDirectory)'
            environmentServiceNameAWS: 'AWS for Terraform'